{"version":3,"sources":["todo_fechapter/views.cljs"],"mappings":"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","names":["todo-fechapter.views/set-hash!","loc","js/window.location","p__43575","map__43576","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","todo-fechapter.views/todo-row","id","title","completed","re-com.core/hyperlink-href","re-com.core/label","todo-fechapter.views/add-todo-row","re-com.core/md-icon-button","todo-fechapter.views/link-to-weather-page","todo-fechapter.views/home-data","todos","G__43584","re-frame.core/subscribe","re-com.core/v-box","re-com.core/h-box","re-com.core/title","cljs.core.map.cljs$core$IFn$_invoke$arity$2","todo","p1__43579#","p2__43578#","cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3","cljs.core/compare","p1__43580#","cljs.core/deref","cljs.core/filterv","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","p1__43582#","p2__43581#","p1__43583#","todo-fechapter.views/home-panel","p__43585","map__43586","todo-fechapter.views/todo-info","description","re-com.core/p","re-com.core/button","G__43588","re-frame.core/dispatch","cljs.core/not","todo-fechapter.views/todo-data","G__43589","current-todo-id","G__43590","todo-fechapter.views/find-id","cljs.core.partial.cljs$core$IFn$_invoke$arity$2","todo-fechapter.views/link-to-home-page","todo-fechapter.views/todo-panel","todo-fechapter.views/form-template","todo-fechapter.views/new-info","doc","reagent.core.atom.cljs$core$IFn$_invoke$arity$1","reagent-forms.core/bind-fields","G__43591","todo-fechapter.views/new-data","G__43592","G__43593","todo-fechapter.views/new-panel","p__43594","map__43595","todo-fechapter.views/weather-info","name","main","weather","G__43598","fexpr__43597","js/console","cljs.core/first","todo-fechapter.views/weather-data","G__43599","G__43601","fexpr__43600","todo-fechapter.views/weather-panel","todo-fechapter.views/panels","panel-name","G__43602","cljs.core/Keyword","todo-fechapter.views/show-panel","todo-fechapter.views/main-panel","active-panel","G__43603"],"sourcesContent":["(ns todo-fechapter.views\n  (:require\n   [re-frame.core :as re-frame]\n   [re-com.core :as re-com]\n   [reagent.core :as r]\n   [reagent-forms.core :refer [bind-fields]]\n   [secretary.core :as secretary]\n   [todo-fechapter.subs :as subs]\n   [todo-fechapter.events :as events]))\n\n(defn set-hash! [loc]\n  (set! (.-hash js/window.location) loc))\n\n\n;; home\n(defn todo-row [{:keys [id title completed]}]\n  [re-com/hyperlink-href\n   :class \"todo\"\n   :label [re-com/label :label title] :href (str \"#/todos/\" id)])\n\n(defn add-todo-row []\n  [re-com/md-icon-button\n   :class \"new-todo\"\n   :size :larger\n   :md-icon-name \"zmdi-plus\"\n   :emphasise? true\n   :on-click #(set-hash! \"#/new\")])\n\n(defn link-to-weather-page []\n  [re-com/hyperlink-href\n   :label \"Check Weather in Ljubljana\"\n   :href \"#/weather\"])\n\n(defn home-data []\n  (let [todos (re-frame/subscribe [::subs/todos])]\n    [re-com/v-box\n     :children [[re-com/h-box\n                 :justify :between\n                 :children [[re-com/title\n                             :label \"To Do\"\n                             :level :level2]\n                            [add-todo-row]]]\n                (map (fn [todo] [todo-row todo])\n                     (sort-by :id #(compare %2 %1) (filterv #(= (:completed %) false) @todos)))\n                [re-com/title\n                 :label \"Completed\"\n                 :level :level2]\n                (map (fn [todo] [todo-row todo])\n                     (sort-by :id #(compare %2 %1) (filterv #(= (:completed %) true) @todos)))]]))\n\n(defn home-panel []\n  [re-com/v-box\n   :gap \"1em\"\n   :children [[home-data]]])\n\n;; todo\n(defn todo-info [{:keys [id title completed description]}]\n  [re-com/v-box\n   :class \"todo-details\"\n   :gap \"5px\"\n   :children [[re-com/title\n               :label title\n               :level :level2]\n              [re-com/p {:class \"description\"} description]\n              [re-com/h-box\n               :class \"todo-actions\"\n               :gap \"5px\"\n               :children [[re-com/button\n                           :label (if completed \"Not Done\" \"Done\")\n                           :on-click (fn []\n                                       (re-frame/dispatch [::events/toggle-complete {:id id, :completed (not completed)}])\n                                       (set-hash! \"/\"))]\n                          [re-com/button\n                           :label \"Back\"\n                           :on-click #(set-hash! \"/\")]]]]])\n\n(defn todo-data []\n  (let [todos (re-frame/subscribe [::subs/todos])\n        current-todo-id (re-frame/subscribe [::subs/current-todo-id])]\n    (def find-id (partial (fn [id todo] (= (int id) (int (:id todo)))) @current-todo-id))\n    [re-com/v-box :children (map (fn [todo] [todo-info todo])\n                                 (filterv find-id @todos))]))\n\n(defn link-to-home-page []\n  [re-com/hyperlink-href\n   :label \"go to Home Page\"\n   :href \"#/\"])\n\n(defn todo-panel []\n  [re-com/v-box\n   :gap \"1em\"\n   :children [[todo-data]]])\n\n(def form-template\n  [re-com/v-box\n   :gap \"5px\"\n   :children [[re-com/label :label \"Title\"]\n              [:input {:field :text :id :title}]\n              [re-com/label :label \"Description\"]\n              [:textarea {:field :textarea :id :description}]]])\n\n;; new todo\n(defn new-info []\n  (let [doc (r/atom {:title \"\" :description \"\"})]\n    (fn []\n      [re-com/v-box\n       :gap \"5px\"\n       :children [[bind-fields\n                   form-template\n                   doc]\n                  [re-com/h-box\n                   :gap \"5px\"\n                   :children [[re-com/button\n                               :label \"Save\"\n                               :on-click (fn []\n                                           (re-frame/dispatch [::events/new-todo @doc])\n                                           (set-hash! \"/\"))]\n                              [re-com/button\n                               :label \"Back\"\n                               :on-click #(set-hash! \"/\")]]]]])))\n\n(defn new-data []\n  (let [todos (re-frame/subscribe [::subs/todos])\n        current-todo-id (re-frame/subscribe [::subs/current-todo-id])]\n    [new-info]))\n\n(defn new-panel []\n  [re-com/v-box\n   :gap \"1em\"\n   :children [[new-data]]])\n\n;; weather\n(defn weather-info [{:keys [name main weather]}]\n  ((.-log js/console) (first weather))\n  [re-com/v-box\n   :children [[re-com/title\n               :label name\n               :level :level2]\n              [:img {:src (str \"http://openweathermap.org/img/wn/\" (:icon (first weather)) \"@2x.png\") :width 100 :height 100}]\n              [re-com/p\n               {:class \"description\"}\n               (str\n                (:temp main)\n                \"\u00b0C\")]]])\n\n(defn weather-data []\n  (let [weather (re-frame/subscribe [::subs/weather])]\n    ((.-log js/console) @weather)\n    (if (or\n         (= @weather \"Loading\")\n         (= @weather nil))\n      [re-com/title\n       :label \"Loading...\"\n       :level :level2]\n      [weather-info @weather])))\n\n(defn weather-panel []\n  [re-com/v-box\n   :gap \"1em\"\n   :children [[weather-data]]])\n\n;; main\n\n(defn- panels [panel-name]\n  (case panel-name\n    :home-panel [home-panel]\n    :todo-panel [todo-panel]\n    :new-panel [new-panel]\n    :weather-panel [weather-panel]\n    [:div]))\n\n(defn show-panel [panel-name]\n  [panels panel-name])\n\n(defn main-panel []\n  (let [active-panel (re-frame/subscribe [::subs/active-panel])]\n    [:div.container\n     [re-com/v-box\n      :height \"100%\"\n      :gap \"10px\"\n      :children [[re-com/title\n                  :label \"Clojurescript TODO Example\"\n                  :level :level1]\n                 (if-not (= @active-panel :weather-panel)\n                   (link-to-weather-page)\n                   (link-to-home-page))\n                 [panels @active-panel]]]]))\n"]}